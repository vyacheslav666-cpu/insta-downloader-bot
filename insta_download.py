import asyncio
import logging
import os
import yt_dlp
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes
)

TOKEN = "8448892888:AAFcAub3t-wHYeAOYvAgcITe3MFyap_71Wg" 

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram –∫–æ–º–∞–Ω–¥–æ–π /download <URL>, –∏ —è –µ–≥–æ —Å–∫–∞—á–∏–≤–∞—é."
    )

async def download_instagram(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /download <URL –Ω–∞ –ø–æ—Å—Ç –∏–ª–∏ —Ä–∏–ª—Å>")
        return

    url = context.args[0]
    ydl_opts = {
        "format": "bestvideo+bestaudio/best",
        "outtmpl": "downloads/%(id)s.%(ext)s"
    }
    os.makedirs("downloads", exist_ok=True)
    msg = await update.message.reply_text("–ó–∞–≥—Ä—É–∂–∞—é‚Ä¶ ‚è≥")

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª –∏ –∑–∞–ø—É—Å–∫–∞–µ–º yt-dlp –≤ –ø—É–ª–µ –ø–æ—Ç–æ–∫–æ–≤
        loop = asyncio.get_event_loop()
        info = await loop.run_in_executor(
            None,
            lambda: yt_dlp.YoutubeDL(ydl_opts).extract_info(url, download=True)
        )
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –ø–æ —Ç–æ–º—É –∂–µ ydl_opts
        filename = yt_dlp.YoutubeDL(ydl_opts).prepare_filename(info)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        with open(filename, "rb") as video:
            await update.message.reply_video(video)
        await msg.edit_text("–ì–æ—Ç–æ–≤–æ! üéâ")
    except Exception as e:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: %s", e)
        await msg.edit_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ:\n{e}")

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("download", download_instagram))

    app.run_polling()

if __name__ == "__main__":
    main()

